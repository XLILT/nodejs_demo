// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.1.0-83.
// **********************************************************************

"use strict;"

var assert     = require('assert');
var TarsStream = require('@tars/stream');
var _TARS_MODULE_A_ = require('./RoomBaseTars.js');
var _TARS_MODULE_B_ = require('./RoomClientTars.js');


var sunlive = sunlive || {};
module.exports.sunlive = sunlive;

sunlive.TraceType = {
    TT_LOWER_LIMIT : 0,
    TT_PATH : 1,
    TT_SOLID_LINE : 2,
    TT_DASH_LINE : 3,
    TT_ARROW_LINE : 4,
    TT_RECT : 5,
    TT_ELLIPSE : 6,
    TT_TEXT : 7,
    TT_UPPER_LIMIT : 8
};
sunlive.TraceType._write = function(os, tag, val) { return os.writeInt32(tag, val); }
sunlive.TraceType._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
sunlive.ClientMsgType = {
    CMT_BEGIN : 0,
    CMT_BEGIN_LIVE : 1,
    CMT_END_LIVE : 2,
    CMT_HEARTBEAT : 3,
    CMT_PAGE_CHANGE : 4,
    CMT_ADD_TRACE : 5,
    CMT_ERASE_TRACE : 6,
    CMT_DOWNLOAD_DOCUMENT : 7,
    CMT_CREATE_TABULA : 8,
    CMT_LOGIN_REQUEST : 9,
    CMT_DESTROY_TABULA : 10,
    CMT_UPLOAD_TOKEN_REQ : 11,
    CMT_CHANGE_TABULA_COLOR : 12,
    CMT_CHANGE_CDN : 13,
    CMT_PAUSE_LIVE : 14,
    CMT_CONTINUE_LIVE : 15,
    CMT_STOP_CDN : 16,
    CMT_BEGIN_PAPER : 17,
    CMT_GET_PUSH_URL : 18,
    CMT_DELETE_DOCUMENT : 19,
    CMT_END : 20,
    CMT_VIDEO_BEGIN : 5000,
    CMT_GET_PAGE : 5001,
    CMT_GET_INCREAMENT_MSG : 5002,
    CMT_VIDEO_END : 8000,
    SMT_BEGIN : 10000,
    SMT_LOGIN_REPLY : 10001,
    SMT_LOGIN_NOTIFY : 10002,
    SMT_BEGIN_LIVE_NOTIFY : 10003,
    SMT_END_LIVE_NOTIFY : 10004,
    SMT_HEARTBEAT : 10005,
    SMT_ADD_TRACE_NOTIFY : 10006,
    SMT_ERASE_TRACE_NOTIFY : 10007,
    SMT_PAGE_CHANGE_NOTIFY : 10008,
    SMT_DOCUMENT_INFO : 10009,
    SMT_ERROR : 10010,
    SMT_VIDEO_LOGIN_RES : 10011,
    SMT_VIDEO_BATCH_RES : 10012,
    SMT_UPLOAD_TOKEN_RES : 10013,
    SMT_UPLOAD_COURSEWARE_NOTIFY : 10014,
    SMT_CHANGE_CDN_NOTIFY : 10015,
    SMT_PAUSE_LIVE_NOTIFY : 10016,
    SMT_CONTINUE_LIVE_NOTIFY : 10017,
    SMT_BEGIN_PAPER_NOTIFY : 10018,
    SMT_PUSH_URL_RES : 10019,
    SMT_UPLOAD_VIDEO_RES : 10020,
    SMT_END : 10021
};
sunlive.ClientMsgType._write = function(os, tag, val) { return os.writeInt32(tag, val); }
sunlive.ClientMsgType._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

sunlive.UploadRes = function() {
    this.sUploadDomain = "";
    this.sBucket = "";
    this.sAuthorization = "";
    this.sCallbackUrl = "";
    this.sCallbackBody = "";
    this.sFileName = "";
    this._classname = "sunlive.UploadRes";
};
sunlive.UploadRes._classname = "sunlive.UploadRes";

sunlive.UploadRes._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.UploadRes._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.UploadRes._readFrom = function (is) {
    var tmp = new sunlive.UploadRes();
    tmp.sUploadDomain = is.readString(1, false, "");
    tmp.sBucket = is.readString(2, false, "");
    tmp.sAuthorization = is.readString(3, false, "");
    tmp.sCallbackUrl = is.readString(4, false, "");
    tmp.sCallbackBody = is.readString(5, false, "");
    tmp.sFileName = is.readString(6, false, "");
    return tmp;
};
sunlive.UploadRes.prototype._writeTo = function (os) {
    os.writeString(1, this.sUploadDomain);
    os.writeString(2, this.sBucket);
    os.writeString(3, this.sAuthorization);
    os.writeString(4, this.sCallbackUrl);
    os.writeString(5, this.sCallbackBody);
    os.writeString(6, this.sFileName);
};
sunlive.UploadRes.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.UploadRes.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.UploadRes.prototype.toObject = function() { 
    var tmp = {};

    tmp.sUploadDomain = this.sUploadDomain;
    tmp.sBucket = this.sBucket;
    tmp.sAuthorization = this.sAuthorization;
    tmp.sCallbackUrl = this.sCallbackUrl;
    tmp.sCallbackBody = this.sCallbackBody;
    tmp.sFileName = this.sFileName;
    
    return tmp;
}
sunlive.UploadRes.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sUploadDomain") || (this.sUploadDomain = json.sUploadDomain);
    !json.hasOwnProperty("sBucket") || (this.sBucket = json.sBucket);
    !json.hasOwnProperty("sAuthorization") || (this.sAuthorization = json.sAuthorization);
    !json.hasOwnProperty("sCallbackUrl") || (this.sCallbackUrl = json.sCallbackUrl);
    !json.hasOwnProperty("sCallbackBody") || (this.sCallbackBody = json.sCallbackBody);
    !json.hasOwnProperty("sFileName") || (this.sFileName = json.sFileName);
}
sunlive.UploadRes.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.UploadRes.new = function () {
    return new sunlive.UploadRes();
}
sunlive.UploadRes.create = function (is) {
    return sunlive.UploadRes._readFrom(is);
}
sunlive.Point = function() {
    this.x = 0;
    this.y = 0;
    this._classname = "sunlive.Point";
};
sunlive.Point._classname = "sunlive.Point";

sunlive.Point._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.Point._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.Point._readFrom = function (is) {
    var tmp = new sunlive.Point();
    tmp.x = is.readInt32(1, false, 0);
    tmp.y = is.readInt32(2, false, 0);
    return tmp;
};
sunlive.Point.prototype._writeTo = function (os) {
    os.writeInt32(1, this.x);
    os.writeInt32(2, this.y);
};
sunlive.Point.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.Point.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.Point.prototype.toObject = function() { 
    var tmp = {};

    tmp.x = this.x;
    tmp.y = this.y;
    
    return tmp;
}
sunlive.Point.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("x") || (this.x = json.x);
    !json.hasOwnProperty("y") || (this.y = json.y);
}
sunlive.Point.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.Point.new = function () {
    return new sunlive.Point();
}
sunlive.Point.create = function (is) {
    return sunlive.Point._readFrom(is);
}
sunlive.Trace = function() {
    this.version = 0;
    this.iType = 0;
    this.iCoursewareId = 0;
    this.iPageId = 0;
    this.iId = 0;
    this.lSequence = 0;
    this.points = new TarsStream.List(_TARS_MODULE_B_.sunlive.Point);
    this.penWidth = 0;
    this.fontSize = 0;
    this.iColor = 0;
    this.sText = "";
    this.iDuration = 0;
    this._classname = "sunlive.Trace";
};
sunlive.Trace._classname = "sunlive.Trace";

sunlive.Trace._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.Trace._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.Trace._readFrom = function (is) {
    var tmp = new sunlive.Trace();
    tmp.version = is.readInt16(1, false, 0);
    tmp.iType = is.readInt32(2, false, 0);
    tmp.iCoursewareId = is.readInt32(3, false, 0);
    tmp.iPageId = is.readInt32(4, false, 0);
    tmp.iId = is.readInt32(5, false, 0);
    tmp.lSequence = is.readInt64(6, false, 0);
    tmp.points = is.readList(7, false, TarsStream.List(_TARS_MODULE_B_.sunlive.Point));
    tmp.penWidth = is.readInt16(8, false, 0);
    tmp.fontSize = is.readInt16(9, false, 0);
    tmp.iColor = is.readUInt32(10, false, 0);
    tmp.sText = is.readString(11, false, "");
    tmp.iDuration = is.readInt32(12, false, 0);
    return tmp;
};
sunlive.Trace.prototype._writeTo = function (os) {
    os.writeInt16(1, this.version);
    os.writeInt32(2, this.iType);
    os.writeInt32(3, this.iCoursewareId);
    os.writeInt32(4, this.iPageId);
    os.writeInt32(5, this.iId);
    os.writeInt64(6, this.lSequence);
    os.writeList(7, this.points);
    os.writeInt16(8, this.penWidth);
    os.writeInt16(9, this.fontSize);
    os.writeUInt32(10, this.iColor);
    os.writeString(11, this.sText);
    os.writeInt32(12, this.iDuration);
};
sunlive.Trace.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.Trace.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.Trace.prototype.toObject = function() { 
    var tmp = {};

    tmp.version = this.version;
    tmp.iType = this.iType;
    tmp.iCoursewareId = this.iCoursewareId;
    tmp.iPageId = this.iPageId;
    tmp.iId = this.iId;
    tmp.lSequence = this.lSequence;
    tmp.points = this.points.toObject();
    tmp.penWidth = this.penWidth;
    tmp.fontSize = this.fontSize;
    tmp.iColor = this.iColor;
    tmp.sText = this.sText;
    tmp.iDuration = this.iDuration;
    
    return tmp;
}
sunlive.Trace.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("version") || (this.version = json.version);
    !json.hasOwnProperty("iType") || (this.iType = json.iType);
    !json.hasOwnProperty("iCoursewareId") || (this.iCoursewareId = json.iCoursewareId);
    !json.hasOwnProperty("iPageId") || (this.iPageId = json.iPageId);
    !json.hasOwnProperty("iId") || (this.iId = json.iId);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
    !json.hasOwnProperty("points") || (this.points.readFromObject(json.points));
    !json.hasOwnProperty("penWidth") || (this.penWidth = json.penWidth);
    !json.hasOwnProperty("fontSize") || (this.fontSize = json.fontSize);
    !json.hasOwnProperty("iColor") || (this.iColor = json.iColor);
    !json.hasOwnProperty("sText") || (this.sText = json.sText);
    !json.hasOwnProperty("iDuration") || (this.iDuration = json.iDuration);
}
sunlive.Trace.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.Trace.new = function () {
    return new sunlive.Trace();
}
sunlive.Trace.create = function (is) {
    return sunlive.Trace._readFrom(is);
}
sunlive.Page = function() {
    this.iPageId = 0;
    this.sUrl = "";
    this.iType = 0;
    this.iColor = 0;
    this.traces = new TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Trace);
    this.iWidth = 0;
    this.iHeight = 0;
    this.lSequence = 0;
    this.iCoursewareId = 0;
    this.iQuestionId = 0;
    this._classname = "sunlive.Page";
};
sunlive.Page._classname = "sunlive.Page";

sunlive.Page._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.Page._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.Page._readFrom = function (is) {
    var tmp = new sunlive.Page();
    tmp.iPageId = is.readInt32(1, false, 0);
    tmp.sUrl = is.readString(2, false, "");
    tmp.iType = is.readInt32(3, false, 0);
    tmp.iColor = is.readUInt32(4, false, 0);
    tmp.traces = is.readMap(5, false, TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Trace));
    tmp.iWidth = is.readInt32(6, false, 0);
    tmp.iHeight = is.readInt32(7, false, 0);
    tmp.lSequence = is.readInt64(8, false, 0);
    tmp.iCoursewareId = is.readInt32(9, false, 0);
    tmp.iQuestionId = is.readInt32(10, false, 0);
    return tmp;
};
sunlive.Page.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iPageId);
    os.writeString(2, this.sUrl);
    os.writeInt32(3, this.iType);
    os.writeUInt32(4, this.iColor);
    os.writeMap(5, this.traces);
    os.writeInt32(6, this.iWidth);
    os.writeInt32(7, this.iHeight);
    os.writeInt64(8, this.lSequence);
    os.writeInt32(9, this.iCoursewareId);
    os.writeInt32(10, this.iQuestionId);
};
sunlive.Page.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.Page.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.Page.prototype.toObject = function() { 
    var tmp = {};

    tmp.iPageId = this.iPageId;
    tmp.sUrl = this.sUrl;
    tmp.iType = this.iType;
    tmp.iColor = this.iColor;
    tmp.traces = this.traces.toObject();
    tmp.iWidth = this.iWidth;
    tmp.iHeight = this.iHeight;
    tmp.lSequence = this.lSequence;
    tmp.iCoursewareId = this.iCoursewareId;
    tmp.iQuestionId = this.iQuestionId;
    
    return tmp;
}
sunlive.Page.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iPageId") || (this.iPageId = json.iPageId);
    !json.hasOwnProperty("sUrl") || (this.sUrl = json.sUrl);
    !json.hasOwnProperty("iType") || (this.iType = json.iType);
    !json.hasOwnProperty("iColor") || (this.iColor = json.iColor);
    !json.hasOwnProperty("traces") || (this.traces.readFromObject(json.traces));
    !json.hasOwnProperty("iWidth") || (this.iWidth = json.iWidth);
    !json.hasOwnProperty("iHeight") || (this.iHeight = json.iHeight);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
    !json.hasOwnProperty("iCoursewareId") || (this.iCoursewareId = json.iCoursewareId);
    !json.hasOwnProperty("iQuestionId") || (this.iQuestionId = json.iQuestionId);
}
sunlive.Page.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.Page.new = function () {
    return new sunlive.Page();
}
sunlive.Page.create = function (is) {
    return sunlive.Page._readFrom(is);
}
sunlive.Courseware = function() {
    this.iId = 0;
    this.sUrl = "";
    this.sName = "";
    this.iType = 0;
    this.pages = new TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Page);
    this.thumnailPages = new TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Page);
    this.iPaperId = 0;
    this.iFlag = 0;
    this.jpegPages = new TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Page);
    this.sFileHash = "";
    this._classname = "sunlive.Courseware";
};
sunlive.Courseware._classname = "sunlive.Courseware";

sunlive.Courseware._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.Courseware._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.Courseware._readFrom = function (is) {
    var tmp = new sunlive.Courseware();
    tmp.iId = is.readInt32(1, false, 0);
    tmp.sUrl = is.readString(2, false, "");
    tmp.sName = is.readString(3, false, "");
    tmp.iType = is.readInt32(4, false, 0);
    tmp.pages = is.readMap(5, false, TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Page));
    tmp.thumnailPages = is.readMap(6, false, TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Page));
    tmp.iPaperId = is.readUInt32(7, false, 0);
    tmp.iFlag = is.readInt32(8, false, 0);
    tmp.jpegPages = is.readMap(9, false, TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Page));
    tmp.sFileHash = is.readString(10, false, "");
    return tmp;
};
sunlive.Courseware.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iId);
    os.writeString(2, this.sUrl);
    os.writeString(3, this.sName);
    os.writeInt32(4, this.iType);
    os.writeMap(5, this.pages);
    os.writeMap(6, this.thumnailPages);
    os.writeUInt32(7, this.iPaperId);
    os.writeInt32(8, this.iFlag);
    os.writeMap(9, this.jpegPages);
    os.writeString(10, this.sFileHash);
};
sunlive.Courseware.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.Courseware.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.Courseware.prototype.toObject = function() { 
    var tmp = {};

    tmp.iId = this.iId;
    tmp.sUrl = this.sUrl;
    tmp.sName = this.sName;
    tmp.iType = this.iType;
    tmp.pages = this.pages.toObject();
    tmp.thumnailPages = this.thumnailPages.toObject();
    tmp.iPaperId = this.iPaperId;
    tmp.iFlag = this.iFlag;
    tmp.jpegPages = this.jpegPages.toObject();
    tmp.sFileHash = this.sFileHash;
    
    return tmp;
}
sunlive.Courseware.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iId") || (this.iId = json.iId);
    !json.hasOwnProperty("sUrl") || (this.sUrl = json.sUrl);
    !json.hasOwnProperty("sName") || (this.sName = json.sName);
    !json.hasOwnProperty("iType") || (this.iType = json.iType);
    !json.hasOwnProperty("pages") || (this.pages.readFromObject(json.pages));
    !json.hasOwnProperty("thumnailPages") || (this.thumnailPages.readFromObject(json.thumnailPages));
    !json.hasOwnProperty("iPaperId") || (this.iPaperId = json.iPaperId);
    !json.hasOwnProperty("iFlag") || (this.iFlag = json.iFlag);
    !json.hasOwnProperty("jpegPages") || (this.jpegPages.readFromObject(json.jpegPages));
    !json.hasOwnProperty("sFileHash") || (this.sFileHash = json.sFileHash);
}
sunlive.Courseware.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.Courseware.new = function () {
    return new sunlive.Courseware();
}
sunlive.Courseware.create = function (is) {
    return sunlive.Courseware._readFrom(is);
}
sunlive.RoomInfo = function() {
    this.sName = "";
    this.sTeacher = "";
    this.lBeginTime = 0;
    this.lEndTime = 0;
    this.iUserCount = 0;
    this.streamPushUrls = new TarsStream.List(_TARS_MODULE_A_.sunlive.PushUrlInfo);
    this.streamPullUrls = new TarsStream.List(_TARS_MODULE_A_.sunlive.PlayUrlInfo);
    this.page = new _TARS_MODULE_B_.sunlive.Page();
    this.iRoomId = 0;
    this.iStatus = 0;
    this.iImId = 0;
    this._classname = "sunlive.RoomInfo";
};
sunlive.RoomInfo._classname = "sunlive.RoomInfo";

sunlive.RoomInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.RoomInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.RoomInfo._readFrom = function (is) {
    var tmp = new sunlive.RoomInfo();
    tmp.sName = is.readString(1, false, "");
    tmp.sTeacher = is.readString(2, false, "");
    tmp.lBeginTime = is.readInt64(3, false, 0);
    tmp.lEndTime = is.readInt64(4, false, 0);
    tmp.iUserCount = is.readInt32(5, false, 0);
    tmp.streamPushUrls = is.readList(6, false, TarsStream.List(_TARS_MODULE_A_.sunlive.PushUrlInfo));
    tmp.streamPullUrls = is.readList(7, false, TarsStream.List(_TARS_MODULE_A_.sunlive.PlayUrlInfo));
    tmp.page = is.readStruct(8, false, _TARS_MODULE_B_.sunlive.Page);
    tmp.iRoomId = is.readInt32(9, false, 0);
    tmp.iStatus = is.readInt32(10, false, 0);
    tmp.iImId = is.readInt32(11, false, 0);
    return tmp;
};
sunlive.RoomInfo.prototype._writeTo = function (os) {
    os.writeString(1, this.sName);
    os.writeString(2, this.sTeacher);
    os.writeInt64(3, this.lBeginTime);
    os.writeInt64(4, this.lEndTime);
    os.writeInt32(5, this.iUserCount);
    os.writeList(6, this.streamPushUrls);
    os.writeList(7, this.streamPullUrls);
    os.writeStruct(8, this.page);
    os.writeInt32(9, this.iRoomId);
    os.writeInt32(10, this.iStatus);
    os.writeInt32(11, this.iImId);
};
sunlive.RoomInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.RoomInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.RoomInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.sName = this.sName;
    tmp.sTeacher = this.sTeacher;
    tmp.lBeginTime = this.lBeginTime;
    tmp.lEndTime = this.lEndTime;
    tmp.iUserCount = this.iUserCount;
    tmp.streamPushUrls = this.streamPushUrls.toObject();
    tmp.streamPullUrls = this.streamPullUrls.toObject();
    tmp.page = this.page.toObject();
    tmp.iRoomId = this.iRoomId;
    tmp.iStatus = this.iStatus;
    tmp.iImId = this.iImId;
    
    return tmp;
}
sunlive.RoomInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sName") || (this.sName = json.sName);
    !json.hasOwnProperty("sTeacher") || (this.sTeacher = json.sTeacher);
    !json.hasOwnProperty("lBeginTime") || (this.lBeginTime = json.lBeginTime);
    !json.hasOwnProperty("lEndTime") || (this.lEndTime = json.lEndTime);
    !json.hasOwnProperty("iUserCount") || (this.iUserCount = json.iUserCount);
    !json.hasOwnProperty("streamPushUrls") || (this.streamPushUrls.readFromObject(json.streamPushUrls));
    !json.hasOwnProperty("streamPullUrls") || (this.streamPullUrls.readFromObject(json.streamPullUrls));
    !json.hasOwnProperty("page") || (this.page.readFromObject(json.page));
    !json.hasOwnProperty("iRoomId") || (this.iRoomId = json.iRoomId);
    !json.hasOwnProperty("iStatus") || (this.iStatus = json.iStatus);
    !json.hasOwnProperty("iImId") || (this.iImId = json.iImId);
}
sunlive.RoomInfo.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.RoomInfo.new = function () {
    return new sunlive.RoomInfo();
}
sunlive.RoomInfo.create = function (is) {
    return sunlive.RoomInfo._readFrom(is);
}
sunlive.GateInfo = function() {
    this.lSessionId = 0;
    this.sIp = "";
    this.iPort = 0;
    this.sServant = "";
    this._classname = "sunlive.GateInfo";
};
sunlive.GateInfo._classname = "sunlive.GateInfo";

sunlive.GateInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.GateInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.GateInfo._readFrom = function (is) {
    var tmp = new sunlive.GateInfo();
    tmp.lSessionId = is.readInt64(1, false, 0);
    tmp.sIp = is.readString(2, false, "");
    tmp.iPort = is.readInt32(3, false, 0);
    tmp.sServant = is.readString(4, false, "");
    return tmp;
};
sunlive.GateInfo.prototype._writeTo = function (os) {
    os.writeInt64(1, this.lSessionId);
    os.writeString(2, this.sIp);
    os.writeInt32(3, this.iPort);
    os.writeString(4, this.sServant);
};
sunlive.GateInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.GateInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.GateInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.lSessionId = this.lSessionId;
    tmp.sIp = this.sIp;
    tmp.iPort = this.iPort;
    tmp.sServant = this.sServant;
    
    return tmp;
}
sunlive.GateInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("lSessionId") || (this.lSessionId = json.lSessionId);
    !json.hasOwnProperty("sIp") || (this.sIp = json.sIp);
    !json.hasOwnProperty("iPort") || (this.iPort = json.iPort);
    !json.hasOwnProperty("sServant") || (this.sServant = json.sServant);
}
sunlive.GateInfo.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.GateInfo.new = function () {
    return new sunlive.GateInfo();
}
sunlive.GateInfo.create = function (is) {
    return sunlive.GateInfo._readFrom(is);
}
sunlive.LoginReq = function() {
    this.sToken = "";
    this.gateInfo = new _TARS_MODULE_B_.sunlive.GateInfo();
    this._classname = "sunlive.LoginReq";
};
sunlive.LoginReq._classname = "sunlive.LoginReq";

sunlive.LoginReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.LoginReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.LoginReq._readFrom = function (is) {
    var tmp = new sunlive.LoginReq();
    tmp.sToken = is.readString(1, false, "");
    tmp.gateInfo = is.readStruct(2, false, _TARS_MODULE_B_.sunlive.GateInfo);
    return tmp;
};
sunlive.LoginReq.prototype._writeTo = function (os) {
    os.writeString(1, this.sToken);
    os.writeStruct(2, this.gateInfo);
};
sunlive.LoginReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.LoginReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.LoginReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.sToken = this.sToken;
    tmp.gateInfo = this.gateInfo.toObject();
    
    return tmp;
}
sunlive.LoginReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sToken") || (this.sToken = json.sToken);
    !json.hasOwnProperty("gateInfo") || (this.gateInfo.readFromObject(json.gateInfo));
}
sunlive.LoginReq.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.LoginReq.new = function () {
    return new sunlive.LoginReq();
}
sunlive.LoginReq.create = function (is) {
    return sunlive.LoginReq._readFrom(is);
}
sunlive.LoginRes = function() {
    this.iCode = 0;
    this.roomInfo = new _TARS_MODULE_B_.sunlive.RoomInfo();
    this.sIcon = "";
    this.iSex = 0;
    this.lSequence = 0;
    this.iTraceId = 0;
    this.sUserName = "";
    this.sConstraints = "";
    this.iUserId = 0;
    this.iDuration = 0;
    this._classname = "sunlive.LoginRes";
};
sunlive.LoginRes._classname = "sunlive.LoginRes";

sunlive.LoginRes._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.LoginRes._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.LoginRes._readFrom = function (is) {
    var tmp = new sunlive.LoginRes();
    tmp.iCode = is.readInt32(1, false, 0);
    tmp.roomInfo = is.readStruct(2, false, _TARS_MODULE_B_.sunlive.RoomInfo);
    tmp.sIcon = is.readString(3, false, "");
    tmp.iSex = is.readInt32(4, false, 0);
    tmp.lSequence = is.readInt64(5, false, 0);
    tmp.iTraceId = is.readInt32(6, false, 0);
    tmp.sUserName = is.readString(7, false, "");
    tmp.sConstraints = is.readString(8, false, "");
    tmp.iUserId = is.readInt32(9, false, 0);
    tmp.iDuration = is.readInt32(10, false, 0);
    return tmp;
};
sunlive.LoginRes.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iCode);
    os.writeStruct(2, this.roomInfo);
    os.writeString(3, this.sIcon);
    os.writeInt32(4, this.iSex);
    os.writeInt64(5, this.lSequence);
    os.writeInt32(6, this.iTraceId);
    os.writeString(7, this.sUserName);
    os.writeString(8, this.sConstraints);
    os.writeInt32(9, this.iUserId);
    os.writeInt32(10, this.iDuration);
};
sunlive.LoginRes.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.LoginRes.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.LoginRes.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCode = this.iCode;
    tmp.roomInfo = this.roomInfo.toObject();
    tmp.sIcon = this.sIcon;
    tmp.iSex = this.iSex;
    tmp.lSequence = this.lSequence;
    tmp.iTraceId = this.iTraceId;
    tmp.sUserName = this.sUserName;
    tmp.sConstraints = this.sConstraints;
    tmp.iUserId = this.iUserId;
    tmp.iDuration = this.iDuration;
    
    return tmp;
}
sunlive.LoginRes.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCode") || (this.iCode = json.iCode);
    !json.hasOwnProperty("roomInfo") || (this.roomInfo.readFromObject(json.roomInfo));
    !json.hasOwnProperty("sIcon") || (this.sIcon = json.sIcon);
    !json.hasOwnProperty("iSex") || (this.iSex = json.iSex);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
    !json.hasOwnProperty("iTraceId") || (this.iTraceId = json.iTraceId);
    !json.hasOwnProperty("sUserName") || (this.sUserName = json.sUserName);
    !json.hasOwnProperty("sConstraints") || (this.sConstraints = json.sConstraints);
    !json.hasOwnProperty("iUserId") || (this.iUserId = json.iUserId);
    !json.hasOwnProperty("iDuration") || (this.iDuration = json.iDuration);
}
sunlive.LoginRes.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.LoginRes.new = function () {
    return new sunlive.LoginRes();
}
sunlive.LoginRes.create = function (is) {
    return sunlive.LoginRes._readFrom(is);
}
sunlive.ChangeCdn = function() {
    this.eCdnType = _TARS_MODULE_A_.sunlive.CdnType.CDN_TYPE_MIN;
    this.lSequence = 0;
    this.sConstraints = "";
    this.eUrlType = _TARS_MODULE_A_.sunlive.UrlType.URL_NORMAL;
    this.sUrl = "";
    this.sFileName = "";
    this._classname = "sunlive.ChangeCdn";
};
sunlive.ChangeCdn._classname = "sunlive.ChangeCdn";

sunlive.ChangeCdn._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.ChangeCdn._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.ChangeCdn._readFrom = function (is) {
    var tmp = new sunlive.ChangeCdn();
    tmp.eCdnType = is.readInt32(1, false, _TARS_MODULE_A_.sunlive.CdnType.CDN_TYPE_MIN);
    tmp.lSequence = is.readInt64(2, false, 0);
    tmp.sConstraints = is.readString(3, false, "");
    tmp.eUrlType = is.readInt32(4, false, _TARS_MODULE_A_.sunlive.UrlType.URL_NORMAL);
    tmp.sUrl = is.readString(5, false, "");
    tmp.sFileName = is.readString(6, false, "");
    return tmp;
};
sunlive.ChangeCdn.prototype._writeTo = function (os) {
    os.writeInt32(1, this.eCdnType);
    os.writeInt64(2, this.lSequence);
    os.writeString(3, this.sConstraints);
    os.writeInt32(4, this.eUrlType);
    os.writeString(5, this.sUrl);
    os.writeString(6, this.sFileName);
};
sunlive.ChangeCdn.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.ChangeCdn.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.ChangeCdn.prototype.toObject = function() { 
    var tmp = {};

    tmp.eCdnType = this.eCdnType;
    tmp.lSequence = this.lSequence;
    tmp.sConstraints = this.sConstraints;
    tmp.eUrlType = this.eUrlType;
    tmp.sUrl = this.sUrl;
    tmp.sFileName = this.sFileName;
    
    return tmp;
}
sunlive.ChangeCdn.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eCdnType") || (this.eCdnType = json.eCdnType);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
    !json.hasOwnProperty("sConstraints") || (this.sConstraints = json.sConstraints);
    !json.hasOwnProperty("eUrlType") || (this.eUrlType = json.eUrlType);
    !json.hasOwnProperty("sUrl") || (this.sUrl = json.sUrl);
    !json.hasOwnProperty("sFileName") || (this.sFileName = json.sFileName);
}
sunlive.ChangeCdn.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.ChangeCdn.new = function () {
    return new sunlive.ChangeCdn();
}
sunlive.ChangeCdn.create = function (is) {
    return sunlive.ChangeCdn._readFrom(is);
}
sunlive.StopCdn = function() {
    this.iStop = 0;
    this.lSequence = 0;
    this._classname = "sunlive.StopCdn";
};
sunlive.StopCdn._classname = "sunlive.StopCdn";

sunlive.StopCdn._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.StopCdn._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.StopCdn._readFrom = function (is) {
    var tmp = new sunlive.StopCdn();
    tmp.iStop = is.readInt32(1, false, 0);
    tmp.lSequence = is.readInt64(2, false, 0);
    return tmp;
};
sunlive.StopCdn.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iStop);
    os.writeInt64(2, this.lSequence);
};
sunlive.StopCdn.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.StopCdn.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.StopCdn.prototype.toObject = function() { 
    var tmp = {};

    tmp.iStop = this.iStop;
    tmp.lSequence = this.lSequence;
    
    return tmp;
}
sunlive.StopCdn.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iStop") || (this.iStop = json.iStop);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
}
sunlive.StopCdn.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.StopCdn.new = function () {
    return new sunlive.StopCdn();
}
sunlive.StopCdn.create = function (is) {
    return sunlive.StopCdn._readFrom(is);
}
sunlive.ChangeCdnNotify = function() {
    this.streamPullUrls = new TarsStream.List(_TARS_MODULE_A_.sunlive.PlayUrlInfo);
    this.eUrlType = _TARS_MODULE_A_.sunlive.UrlType.URL_NORMAL;
    this._classname = "sunlive.ChangeCdnNotify";
};
sunlive.ChangeCdnNotify._classname = "sunlive.ChangeCdnNotify";

sunlive.ChangeCdnNotify._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.ChangeCdnNotify._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.ChangeCdnNotify._readFrom = function (is) {
    var tmp = new sunlive.ChangeCdnNotify();
    tmp.streamPullUrls = is.readList(1, false, TarsStream.List(_TARS_MODULE_A_.sunlive.PlayUrlInfo));
    tmp.eUrlType = is.readInt32(2, false, _TARS_MODULE_A_.sunlive.UrlType.URL_NORMAL);
    return tmp;
};
sunlive.ChangeCdnNotify.prototype._writeTo = function (os) {
    os.writeList(1, this.streamPullUrls);
    os.writeInt32(2, this.eUrlType);
};
sunlive.ChangeCdnNotify.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.ChangeCdnNotify.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.ChangeCdnNotify.prototype.toObject = function() { 
    var tmp = {};

    tmp.streamPullUrls = this.streamPullUrls.toObject();
    tmp.eUrlType = this.eUrlType;
    
    return tmp;
}
sunlive.ChangeCdnNotify.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("streamPullUrls") || (this.streamPullUrls.readFromObject(json.streamPullUrls));
    !json.hasOwnProperty("eUrlType") || (this.eUrlType = json.eUrlType);
}
sunlive.ChangeCdnNotify.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.ChangeCdnNotify.new = function () {
    return new sunlive.ChangeCdnNotify();
}
sunlive.ChangeCdnNotify.create = function (is) {
    return sunlive.ChangeCdnNotify._readFrom(is);
}
sunlive.GetPushUrlReq = function() {
    this.eUrlType = _TARS_MODULE_A_.sunlive.UrlType.URL_NORMAL;
    this._classname = "sunlive.GetPushUrlReq";
};
sunlive.GetPushUrlReq._classname = "sunlive.GetPushUrlReq";

sunlive.GetPushUrlReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.GetPushUrlReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.GetPushUrlReq._readFrom = function (is) {
    var tmp = new sunlive.GetPushUrlReq();
    tmp.eUrlType = is.readInt32(1, false, _TARS_MODULE_A_.sunlive.UrlType.URL_NORMAL);
    return tmp;
};
sunlive.GetPushUrlReq.prototype._writeTo = function (os) {
    os.writeInt32(1, this.eUrlType);
};
sunlive.GetPushUrlReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.GetPushUrlReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.GetPushUrlReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.eUrlType = this.eUrlType;
    
    return tmp;
}
sunlive.GetPushUrlReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eUrlType") || (this.eUrlType = json.eUrlType);
}
sunlive.GetPushUrlReq.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.GetPushUrlReq.new = function () {
    return new sunlive.GetPushUrlReq();
}
sunlive.GetPushUrlReq.create = function (is) {
    return sunlive.GetPushUrlReq._readFrom(is);
}
sunlive.GetPushUrlRes = function() {
    this.streamPushUrls = new TarsStream.List(_TARS_MODULE_A_.sunlive.PushUrlInfo);
    this._classname = "sunlive.GetPushUrlRes";
};
sunlive.GetPushUrlRes._classname = "sunlive.GetPushUrlRes";

sunlive.GetPushUrlRes._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.GetPushUrlRes._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.GetPushUrlRes._readFrom = function (is) {
    var tmp = new sunlive.GetPushUrlRes();
    tmp.streamPushUrls = is.readList(1, false, TarsStream.List(_TARS_MODULE_A_.sunlive.PushUrlInfo));
    return tmp;
};
sunlive.GetPushUrlRes.prototype._writeTo = function (os) {
    os.writeList(1, this.streamPushUrls);
};
sunlive.GetPushUrlRes.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.GetPushUrlRes.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.GetPushUrlRes.prototype.toObject = function() { 
    var tmp = {};

    tmp.streamPushUrls = this.streamPushUrls.toObject();
    
    return tmp;
}
sunlive.GetPushUrlRes.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("streamPushUrls") || (this.streamPushUrls.readFromObject(json.streamPushUrls));
}
sunlive.GetPushUrlRes.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.GetPushUrlRes.new = function () {
    return new sunlive.GetPushUrlRes();
}
sunlive.GetPushUrlRes.create = function (is) {
    return sunlive.GetPushUrlRes._readFrom(is);
}
sunlive.BeginPaper = function() {
    this.iPaperId = 0;
    this.lSequence = 0;
    this._classname = "sunlive.BeginPaper";
};
sunlive.BeginPaper._classname = "sunlive.BeginPaper";

sunlive.BeginPaper._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.BeginPaper._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.BeginPaper._readFrom = function (is) {
    var tmp = new sunlive.BeginPaper();
    tmp.iPaperId = is.readUInt32(1, false, 0);
    tmp.lSequence = is.readInt64(2, false, 0);
    return tmp;
};
sunlive.BeginPaper.prototype._writeTo = function (os) {
    os.writeUInt32(1, this.iPaperId);
    os.writeInt64(2, this.lSequence);
};
sunlive.BeginPaper.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.BeginPaper.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.BeginPaper.prototype.toObject = function() { 
    var tmp = {};

    tmp.iPaperId = this.iPaperId;
    tmp.lSequence = this.lSequence;
    
    return tmp;
}
sunlive.BeginPaper.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iPaperId") || (this.iPaperId = json.iPaperId);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
}
sunlive.BeginPaper.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.BeginPaper.new = function () {
    return new sunlive.BeginPaper();
}
sunlive.BeginPaper.create = function (is) {
    return sunlive.BeginPaper._readFrom(is);
}
sunlive.BeginLive = function() {
    this.lStartTime = 0;
    this.sMsg = "";
    this.sConstraints = "";
    this._classname = "sunlive.BeginLive";
};
sunlive.BeginLive._classname = "sunlive.BeginLive";

sunlive.BeginLive._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.BeginLive._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.BeginLive._readFrom = function (is) {
    var tmp = new sunlive.BeginLive();
    tmp.lStartTime = is.readInt64(1, false, 0);
    tmp.sMsg = is.readString(2, false, "");
    tmp.sConstraints = is.readString(3, false, "");
    return tmp;
};
sunlive.BeginLive.prototype._writeTo = function (os) {
    os.writeInt64(1, this.lStartTime);
    os.writeString(2, this.sMsg);
    os.writeString(3, this.sConstraints);
};
sunlive.BeginLive.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.BeginLive.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.BeginLive.prototype.toObject = function() { 
    var tmp = {};

    tmp.lStartTime = this.lStartTime;
    tmp.sMsg = this.sMsg;
    tmp.sConstraints = this.sConstraints;
    
    return tmp;
}
sunlive.BeginLive.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("lStartTime") || (this.lStartTime = json.lStartTime);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("sConstraints") || (this.sConstraints = json.sConstraints);
}
sunlive.BeginLive.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.BeginLive.new = function () {
    return new sunlive.BeginLive();
}
sunlive.BeginLive.create = function (is) {
    return sunlive.BeginLive._readFrom(is);
}
sunlive.EndLive = function() {
    this.lEndTime = 0;
    this.sMsg = "";
    this.lSequence = 0;
    this.iCode = 0;
    this._classname = "sunlive.EndLive";
};
sunlive.EndLive._classname = "sunlive.EndLive";

sunlive.EndLive._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.EndLive._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.EndLive._readFrom = function (is) {
    var tmp = new sunlive.EndLive();
    tmp.lEndTime = is.readInt64(1, false, 0);
    tmp.sMsg = is.readString(2, false, "");
    tmp.lSequence = is.readInt64(3, false, 0);
    tmp.iCode = is.readInt32(4, false, 0);
    return tmp;
};
sunlive.EndLive.prototype._writeTo = function (os) {
    os.writeInt64(1, this.lEndTime);
    os.writeString(2, this.sMsg);
    os.writeInt64(3, this.lSequence);
    os.writeInt32(4, this.iCode);
};
sunlive.EndLive.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.EndLive.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.EndLive.prototype.toObject = function() { 
    var tmp = {};

    tmp.lEndTime = this.lEndTime;
    tmp.sMsg = this.sMsg;
    tmp.lSequence = this.lSequence;
    tmp.iCode = this.iCode;
    
    return tmp;
}
sunlive.EndLive.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("lEndTime") || (this.lEndTime = json.lEndTime);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
    !json.hasOwnProperty("iCode") || (this.iCode = json.iCode);
}
sunlive.EndLive.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.EndLive.new = function () {
    return new sunlive.EndLive();
}
sunlive.EndLive.create = function (is) {
    return sunlive.EndLive._readFrom(is);
}
sunlive.PauseLive = function() {
    this.lPauseTime = 0;
    this.sMsg = "";
    this.lSequence = 0;
    this._classname = "sunlive.PauseLive";
};
sunlive.PauseLive._classname = "sunlive.PauseLive";

sunlive.PauseLive._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.PauseLive._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.PauseLive._readFrom = function (is) {
    var tmp = new sunlive.PauseLive();
    tmp.lPauseTime = is.readInt64(1, false, 0);
    tmp.sMsg = is.readString(2, false, "");
    tmp.lSequence = is.readInt64(3, false, 0);
    return tmp;
};
sunlive.PauseLive.prototype._writeTo = function (os) {
    os.writeInt64(1, this.lPauseTime);
    os.writeString(2, this.sMsg);
    os.writeInt64(3, this.lSequence);
};
sunlive.PauseLive.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.PauseLive.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.PauseLive.prototype.toObject = function() { 
    var tmp = {};

    tmp.lPauseTime = this.lPauseTime;
    tmp.sMsg = this.sMsg;
    tmp.lSequence = this.lSequence;
    
    return tmp;
}
sunlive.PauseLive.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("lPauseTime") || (this.lPauseTime = json.lPauseTime);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
}
sunlive.PauseLive.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.PauseLive.new = function () {
    return new sunlive.PauseLive();
}
sunlive.PauseLive.create = function (is) {
    return sunlive.PauseLive._readFrom(is);
}
sunlive.ContinueLive = function() {
    this.lContinueTime = 0;
    this.sMsg = "";
    this._classname = "sunlive.ContinueLive";
};
sunlive.ContinueLive._classname = "sunlive.ContinueLive";

sunlive.ContinueLive._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.ContinueLive._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.ContinueLive._readFrom = function (is) {
    var tmp = new sunlive.ContinueLive();
    tmp.lContinueTime = is.readInt64(1, false, 0);
    tmp.sMsg = is.readString(2, false, "");
    return tmp;
};
sunlive.ContinueLive.prototype._writeTo = function (os) {
    os.writeInt64(1, this.lContinueTime);
    os.writeString(2, this.sMsg);
};
sunlive.ContinueLive.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.ContinueLive.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.ContinueLive.prototype.toObject = function() { 
    var tmp = {};

    tmp.lContinueTime = this.lContinueTime;
    tmp.sMsg = this.sMsg;
    
    return tmp;
}
sunlive.ContinueLive.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("lContinueTime") || (this.lContinueTime = json.lContinueTime);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
}
sunlive.ContinueLive.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.ContinueLive.new = function () {
    return new sunlive.ContinueLive();
}
sunlive.ContinueLive.create = function (is) {
    return sunlive.ContinueLive._readFrom(is);
}
sunlive.HeartBeat = function() {
    this.lTimestamp = 0;
    this.iUserCount = 0;
    this.iCdnStatus = 0;
    this._classname = "sunlive.HeartBeat";
};
sunlive.HeartBeat._classname = "sunlive.HeartBeat";

sunlive.HeartBeat._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.HeartBeat._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.HeartBeat._readFrom = function (is) {
    var tmp = new sunlive.HeartBeat();
    tmp.lTimestamp = is.readInt64(1, false, 0);
    tmp.iUserCount = is.readInt32(2, false, 0);
    tmp.iCdnStatus = is.readInt32(3, false, 0);
    return tmp;
};
sunlive.HeartBeat.prototype._writeTo = function (os) {
    os.writeInt64(1, this.lTimestamp);
    os.writeInt32(2, this.iUserCount);
    os.writeInt32(3, this.iCdnStatus);
};
sunlive.HeartBeat.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.HeartBeat.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.HeartBeat.prototype.toObject = function() { 
    var tmp = {};

    tmp.lTimestamp = this.lTimestamp;
    tmp.iUserCount = this.iUserCount;
    tmp.iCdnStatus = this.iCdnStatus;
    
    return tmp;
}
sunlive.HeartBeat.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("lTimestamp") || (this.lTimestamp = json.lTimestamp);
    !json.hasOwnProperty("iUserCount") || (this.iUserCount = json.iUserCount);
    !json.hasOwnProperty("iCdnStatus") || (this.iCdnStatus = json.iCdnStatus);
}
sunlive.HeartBeat.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.HeartBeat.new = function () {
    return new sunlive.HeartBeat();
}
sunlive.HeartBeat.create = function (is) {
    return sunlive.HeartBeat._readFrom(is);
}
sunlive.ChangePageReq = function() {
    this.iCoursewareId = 0;
    this.iPageId = 0;
    this.lSequence = 0;
    this._classname = "sunlive.ChangePageReq";
};
sunlive.ChangePageReq._classname = "sunlive.ChangePageReq";

sunlive.ChangePageReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.ChangePageReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.ChangePageReq._readFrom = function (is) {
    var tmp = new sunlive.ChangePageReq();
    tmp.iCoursewareId = is.readInt32(1, false, 0);
    tmp.iPageId = is.readInt32(2, false, 0);
    tmp.lSequence = is.readInt64(3, false, 0);
    return tmp;
};
sunlive.ChangePageReq.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iCoursewareId);
    os.writeInt32(2, this.iPageId);
    os.writeInt64(3, this.lSequence);
};
sunlive.ChangePageReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.ChangePageReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.ChangePageReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCoursewareId = this.iCoursewareId;
    tmp.iPageId = this.iPageId;
    tmp.lSequence = this.lSequence;
    
    return tmp;
}
sunlive.ChangePageReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCoursewareId") || (this.iCoursewareId = json.iCoursewareId);
    !json.hasOwnProperty("iPageId") || (this.iPageId = json.iPageId);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
}
sunlive.ChangePageReq.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.ChangePageReq.new = function () {
    return new sunlive.ChangePageReq();
}
sunlive.ChangePageReq.create = function (is) {
    return sunlive.ChangePageReq._readFrom(is);
}
sunlive.EraseTrace = function() {
    this.iCoursewareId = 0;
    this.iPageId = 0;
    this.traceIds = new TarsStream.List(TarsStream.Int32);
    this.lSequence = 0;
    this._classname = "sunlive.EraseTrace";
};
sunlive.EraseTrace._classname = "sunlive.EraseTrace";

sunlive.EraseTrace._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.EraseTrace._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.EraseTrace._readFrom = function (is) {
    var tmp = new sunlive.EraseTrace();
    tmp.iCoursewareId = is.readInt32(1, false, 0);
    tmp.iPageId = is.readInt32(2, false, 0);
    tmp.traceIds = is.readList(3, false, TarsStream.List(TarsStream.Int32));
    tmp.lSequence = is.readInt64(4, false, 0);
    return tmp;
};
sunlive.EraseTrace.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iCoursewareId);
    os.writeInt32(2, this.iPageId);
    os.writeList(3, this.traceIds);
    os.writeInt64(4, this.lSequence);
};
sunlive.EraseTrace.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.EraseTrace.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.EraseTrace.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCoursewareId = this.iCoursewareId;
    tmp.iPageId = this.iPageId;
    tmp.traceIds = this.traceIds.toObject();
    tmp.lSequence = this.lSequence;
    
    return tmp;
}
sunlive.EraseTrace.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCoursewareId") || (this.iCoursewareId = json.iCoursewareId);
    !json.hasOwnProperty("iPageId") || (this.iPageId = json.iPageId);
    !json.hasOwnProperty("traceIds") || (this.traceIds.readFromObject(json.traceIds));
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
}
sunlive.EraseTrace.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.EraseTrace.new = function () {
    return new sunlive.EraseTrace();
}
sunlive.EraseTrace.create = function (is) {
    return sunlive.EraseTrace._readFrom(is);
}
sunlive.CreateTabula = function() {
    this.iCoursewareId = 0;
    this.iPageId = 0;
    this.iColor = 0;
    this.lSequence = 0;
    this._classname = "sunlive.CreateTabula";
};
sunlive.CreateTabula._classname = "sunlive.CreateTabula";

sunlive.CreateTabula._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.CreateTabula._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.CreateTabula._readFrom = function (is) {
    var tmp = new sunlive.CreateTabula();
    tmp.iCoursewareId = is.readInt32(1, false, 0);
    tmp.iPageId = is.readInt32(2, false, 0);
    tmp.iColor = is.readUInt32(3, false, 0);
    tmp.lSequence = is.readInt64(4, false, 0);
    return tmp;
};
sunlive.CreateTabula.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iCoursewareId);
    os.writeInt32(2, this.iPageId);
    os.writeUInt32(3, this.iColor);
    os.writeInt64(4, this.lSequence);
};
sunlive.CreateTabula.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.CreateTabula.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.CreateTabula.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCoursewareId = this.iCoursewareId;
    tmp.iPageId = this.iPageId;
    tmp.iColor = this.iColor;
    tmp.lSequence = this.lSequence;
    
    return tmp;
}
sunlive.CreateTabula.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCoursewareId") || (this.iCoursewareId = json.iCoursewareId);
    !json.hasOwnProperty("iPageId") || (this.iPageId = json.iPageId);
    !json.hasOwnProperty("iColor") || (this.iColor = json.iColor);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
}
sunlive.CreateTabula.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.CreateTabula.new = function () {
    return new sunlive.CreateTabula();
}
sunlive.CreateTabula.create = function (is) {
    return sunlive.CreateTabula._readFrom(is);
}
sunlive.ChangeTabulaColor = function() {
    this.iCoursewareId = 0;
    this.iPageId = 0;
    this.iColor = 0;
    this.lSequence = 0;
    this._classname = "sunlive.ChangeTabulaColor";
};
sunlive.ChangeTabulaColor._classname = "sunlive.ChangeTabulaColor";

sunlive.ChangeTabulaColor._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.ChangeTabulaColor._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.ChangeTabulaColor._readFrom = function (is) {
    var tmp = new sunlive.ChangeTabulaColor();
    tmp.iCoursewareId = is.readInt32(1, false, 0);
    tmp.iPageId = is.readInt32(2, false, 0);
    tmp.iColor = is.readUInt32(3, false, 0);
    tmp.lSequence = is.readInt64(4, false, 0);
    return tmp;
};
sunlive.ChangeTabulaColor.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iCoursewareId);
    os.writeInt32(2, this.iPageId);
    os.writeUInt32(3, this.iColor);
    os.writeInt64(4, this.lSequence);
};
sunlive.ChangeTabulaColor.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.ChangeTabulaColor.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.ChangeTabulaColor.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCoursewareId = this.iCoursewareId;
    tmp.iPageId = this.iPageId;
    tmp.iColor = this.iColor;
    tmp.lSequence = this.lSequence;
    
    return tmp;
}
sunlive.ChangeTabulaColor.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCoursewareId") || (this.iCoursewareId = json.iCoursewareId);
    !json.hasOwnProperty("iPageId") || (this.iPageId = json.iPageId);
    !json.hasOwnProperty("iColor") || (this.iColor = json.iColor);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
}
sunlive.ChangeTabulaColor.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.ChangeTabulaColor.new = function () {
    return new sunlive.ChangeTabulaColor();
}
sunlive.ChangeTabulaColor.create = function (is) {
    return sunlive.ChangeTabulaColor._readFrom(is);
}
sunlive.DestroyTabula = function() {
    this.iCoursewareId = 0;
    this.iPageId = 0;
    this.lSequence = 0;
    this._classname = "sunlive.DestroyTabula";
};
sunlive.DestroyTabula._classname = "sunlive.DestroyTabula";

sunlive.DestroyTabula._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.DestroyTabula._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.DestroyTabula._readFrom = function (is) {
    var tmp = new sunlive.DestroyTabula();
    tmp.iCoursewareId = is.readInt32(1, false, 0);
    tmp.iPageId = is.readInt32(2, false, 0);
    tmp.lSequence = is.readInt64(3, false, 0);
    return tmp;
};
sunlive.DestroyTabula.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iCoursewareId);
    os.writeInt32(2, this.iPageId);
    os.writeInt64(3, this.lSequence);
};
sunlive.DestroyTabula.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.DestroyTabula.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.DestroyTabula.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCoursewareId = this.iCoursewareId;
    tmp.iPageId = this.iPageId;
    tmp.lSequence = this.lSequence;
    
    return tmp;
}
sunlive.DestroyTabula.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCoursewareId") || (this.iCoursewareId = json.iCoursewareId);
    !json.hasOwnProperty("iPageId") || (this.iPageId = json.iPageId);
    !json.hasOwnProperty("lSequence") || (this.lSequence = json.lSequence);
}
sunlive.DestroyTabula.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.DestroyTabula.new = function () {
    return new sunlive.DestroyTabula();
}
sunlive.DestroyTabula.create = function (is) {
    return sunlive.DestroyTabula._readFrom(is);
}
sunlive.DeleteDocument = function() {
    this.iCoursewareId = 0;
    this._classname = "sunlive.DeleteDocument";
};
sunlive.DeleteDocument._classname = "sunlive.DeleteDocument";

sunlive.DeleteDocument._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.DeleteDocument._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.DeleteDocument._readFrom = function (is) {
    var tmp = new sunlive.DeleteDocument();
    tmp.iCoursewareId = is.readInt32(1, false, 0);
    return tmp;
};
sunlive.DeleteDocument.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iCoursewareId);
};
sunlive.DeleteDocument.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.DeleteDocument.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.DeleteDocument.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCoursewareId = this.iCoursewareId;
    
    return tmp;
}
sunlive.DeleteDocument.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCoursewareId") || (this.iCoursewareId = json.iCoursewareId);
}
sunlive.DeleteDocument.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.DeleteDocument.new = function () {
    return new sunlive.DeleteDocument();
}
sunlive.DeleteDocument.create = function (is) {
    return sunlive.DeleteDocument._readFrom(is);
}
sunlive.LoginNotify = function() {
    this.sUserName = "";
    this.sIcon = "";
    this.role = _TARS_MODULE_A_.sunlive.RoleType.RT_BEGIN;
    this.iUserId = 0;
    this.iUserCount = 0;
    this._classname = "sunlive.LoginNotify";
};
sunlive.LoginNotify._classname = "sunlive.LoginNotify";

sunlive.LoginNotify._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.LoginNotify._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.LoginNotify._readFrom = function (is) {
    var tmp = new sunlive.LoginNotify();
    tmp.sUserName = is.readString(1, false, "");
    tmp.sIcon = is.readString(2, false, "");
    tmp.role = is.readInt32(3, false, _TARS_MODULE_A_.sunlive.RoleType.RT_BEGIN);
    tmp.iUserId = is.readInt32(4, false, 0);
    tmp.iUserCount = is.readInt32(5, false, 0);
    return tmp;
};
sunlive.LoginNotify.prototype._writeTo = function (os) {
    os.writeString(1, this.sUserName);
    os.writeString(2, this.sIcon);
    os.writeInt32(3, this.role);
    os.writeInt32(4, this.iUserId);
    os.writeInt32(5, this.iUserCount);
};
sunlive.LoginNotify.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.LoginNotify.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.LoginNotify.prototype.toObject = function() { 
    var tmp = {};

    tmp.sUserName = this.sUserName;
    tmp.sIcon = this.sIcon;
    tmp.role = this.role;
    tmp.iUserId = this.iUserId;
    tmp.iUserCount = this.iUserCount;
    
    return tmp;
}
sunlive.LoginNotify.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sUserName") || (this.sUserName = json.sUserName);
    !json.hasOwnProperty("sIcon") || (this.sIcon = json.sIcon);
    !json.hasOwnProperty("role") || (this.role = json.role);
    !json.hasOwnProperty("iUserId") || (this.iUserId = json.iUserId);
    !json.hasOwnProperty("iUserCount") || (this.iUserCount = json.iUserCount);
}
sunlive.LoginNotify.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.LoginNotify.new = function () {
    return new sunlive.LoginNotify();
}
sunlive.LoginNotify.create = function (is) {
    return sunlive.LoginNotify._readFrom(is);
}
sunlive.CoursewareInfo = function() {
    this.coursewares = new TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Courseware);
    this._classname = "sunlive.CoursewareInfo";
};
sunlive.CoursewareInfo._classname = "sunlive.CoursewareInfo";

sunlive.CoursewareInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.CoursewareInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.CoursewareInfo._readFrom = function (is) {
    var tmp = new sunlive.CoursewareInfo();
    tmp.coursewares = is.readMap(1, false, TarsStream.Map(TarsStream.Int32, _TARS_MODULE_B_.sunlive.Courseware));
    return tmp;
};
sunlive.CoursewareInfo.prototype._writeTo = function (os) {
    os.writeMap(1, this.coursewares);
};
sunlive.CoursewareInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.CoursewareInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.CoursewareInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.coursewares = this.coursewares.toObject();
    
    return tmp;
}
sunlive.CoursewareInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("coursewares") || (this.coursewares.readFromObject(json.coursewares));
}
sunlive.CoursewareInfo.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.CoursewareInfo.new = function () {
    return new sunlive.CoursewareInfo();
}
sunlive.CoursewareInfo.create = function (is) {
    return sunlive.CoursewareInfo._readFrom(is);
}
sunlive.Error = function() {
    this.iCode = 0;
    this.sError = "";
    this.operation = 0;
    this._classname = "sunlive.Error";
};
sunlive.Error._classname = "sunlive.Error";

sunlive.Error._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.Error._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.Error._readFrom = function (is) {
    var tmp = new sunlive.Error();
    tmp.iCode = is.readInt32(1, false, 0);
    tmp.sError = is.readString(2, false, "");
    tmp.operation = is.readInt32(3, false, 0);
    return tmp;
};
sunlive.Error.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iCode);
    os.writeString(2, this.sError);
    os.writeInt32(3, this.operation);
};
sunlive.Error.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.Error.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.Error.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCode = this.iCode;
    tmp.sError = this.sError;
    tmp.operation = this.operation;
    
    return tmp;
}
sunlive.Error.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCode") || (this.iCode = json.iCode);
    !json.hasOwnProperty("sError") || (this.sError = json.sError);
    !json.hasOwnProperty("operation") || (this.operation = json.operation);
}
sunlive.Error.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.Error.new = function () {
    return new sunlive.Error();
}
sunlive.Error.create = function (is) {
    return sunlive.Error._readFrom(is);
}
sunlive.ClientMsgBody = function() {
    this.eType = _TARS_MODULE_B_.sunlive.ClientMsgType.CMT_BEGIN;
    this.bytes = new TarsStream.BinBuffer();
    this._classname = "sunlive.ClientMsgBody";
};
sunlive.ClientMsgBody._classname = "sunlive.ClientMsgBody";

sunlive.ClientMsgBody._write = function (os, tag, value) { os.writeStruct(tag, value); }
sunlive.ClientMsgBody._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
sunlive.ClientMsgBody._readFrom = function (is) {
    var tmp = new sunlive.ClientMsgBody();
    tmp.eType = is.readInt32(1, false, _TARS_MODULE_B_.sunlive.ClientMsgType.CMT_BEGIN);
    tmp.bytes = is.readBytes(2, false, TarsStream.BinBuffer);
    return tmp;
};
sunlive.ClientMsgBody.prototype._writeTo = function (os) {
    os.writeInt32(1, this.eType);
    os.writeBytes(2, this.bytes);
};
sunlive.ClientMsgBody.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
sunlive.ClientMsgBody.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
sunlive.ClientMsgBody.prototype.toObject = function() { 
    var tmp = {};

    tmp.eType = this.eType;
    tmp.bytes = this.bytes.toObject();
    
    return tmp;
}
sunlive.ClientMsgBody.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("eType") || (this.eType = json.eType);
    !json.hasOwnProperty("bytes") || (this.bytes.readFromObject(json.bytes));
}
sunlive.ClientMsgBody.prototype.toBinBuffer = function () {
    var os = new TarsStream.OutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
sunlive.ClientMsgBody.new = function () {
    return new sunlive.ClientMsgBody();
}
sunlive.ClientMsgBody.create = function (is) {
    return sunlive.ClientMsgBody._readFrom(is);
}


